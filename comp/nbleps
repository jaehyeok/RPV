#include<iostream>
using namespace std;

void nbstackedleps(){
	/* make chain */
	TChain ch_ku("tree");
	TChain ch_ucsb("tree");

	ch_ku.Add("/xrootd_user/jaehyeok/xrootd/2016v4/2019_12_10/skim_rpvfitnbge0/*JetHT*");
	ch_ucsb.Add("/xrootd_user/jaehyeok/xrootd/ucsb_babies/2017_02_14/data/merged_rpvdata_st1000/*JetHT*");

	cout <<"KU entry : "<< ch_ku.GetEntries() << ", UCSB entry : " <<  ch_ucsb.GetEntries() << endl;

	THStack *lepsku	= new THStack("lepsku","");
	THStack *lepsuc = new THStack("lepsuc","");

	vector<TH1F *> lepku;
	vector<TH1F *> lepuc;

	for(int i=1;i<5;i++){
		TH1F *lepkub = new TH1F(Form("lepku%d",i),Form("lepku%d",i),5,-0.5,4.5);
		TH1F *lepucb = new TH1F(Form("lepuc%d",i),Form("lepuc%d",i),5,-0.5,4.5);
		lepku.push_back(lepkub);
		lepuc.push_back(lepucb);
	}

	TString StackCutku;
	TString StackCutucsb;

	StackCutku = "&& Sum$(jets_csv>0.8484 && jets_pt>30 && jets_id && !jets_islep && abs(jets_eta)<2.4)";
	StackCutucsb = "&& nbm";

	vector<TString> stcut;

	stcut.push_back("==1");
	stcut.push_back("==2");
	stcut.push_back("==3");
	stcut.push_back(">=4");

	vector<Color_t> colors;
	colors.push_back(kRed);
	colors.push_back(kGreen+2);
	colors.push_back(kBlue);
	colors.push_back(kBlack);
	
	for(int j=1;j<5;j++){
		ch_ku.Draw(Form("min(nleps,4)>>lepku%d",j)," ht>1200 && mj12>500 && njets>=4 && Sum$(jets_csv>0.8484 && jets_pt>30 && jets_id && !jets_islep && abs(jets_eta)<2.4)>=1 && (trig_ht900 || trig_jet450)"+StackCutku+stcut.at(j-1),"goff");
		cout << "KU leptons finished." << endl;	
		ch_ucsb.Draw(Form("min(nleps,4)>>lepuc%d",j)," ht>1200 && mj12>500 && njets>=4 && nbm>=1 && (trig[54] || trig[56])"+StackCutucsb+stcut.at(j-1),"goff");
		cout << "UCSB leptons finished." << endl;
		lepku.at(j-1)->SetLineColor(colors.at(j-1));
		lepku.at(j-1)->SetFillColor(colors.at(j-1));
		lepku.at(j-1)->SetLineWidth(2);
		lepuc.at(j-1)->SetLineColor(colors.at(j-1));
		lepuc.at(j-1)->SetFillColor(colors.at(j-1));
		lepuc.at(j-1)->SetLineWidth(2);
		lepsku->Add(lepku.at(j-1));
		lepsuc->Add(lepuc.at(j-1));
	}	

	TCanvas *c = new TCanvas("c","c",1600,800);
	c->Divide(2,1);
	c->cd(1);

	lepsku->Draw("");

	TLegend *l1 = new TLegend(0.477185,0.6740231,0.8578692,0.8744133);
	l1->SetBorderSize(0);
	l1->SetNColumns(2);
	for(int k=0;k<4;k++){
		l1->AddEntry(lepku.at(k), stcut.at(k) , "l");
	}
	l1->Draw("");


	c->cd(2);
	
	lepsuc->Draw("");

	TLegend *l2 = new TLegend(0.477185,0.6740231,0.8578692,0.8744133);
	l2->SetBorderSize(0);
	l2->SetNColumns(2);
	for(int k=0;k<4;k++){
		l2->AddEntry(lepuc.at(k), stcut.at(k) , "l");
	}
	l2->Draw("");

	c->Print("./Plots/leps_stacked_comp.pdf");
	c->Print("./Plots/leps_stacked_comp.C");
}

